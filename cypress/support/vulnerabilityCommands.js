import "@4tw/cypress-drag-drop";
import "cypress-real-events/support";
import "cypress-localstorage-commands";
import "cypress-log-to-output";
import { recurse } from 'cypress-recurse';
const navBarSelector = require('../selectors/navBarSelector.js')
const vulnerabilityListViewSelector = require('../selectors/vulnerabilityListViewSelector.js')

Cypress.Commands.add("addNewVulnerability", (vulnerability) => {
    cy.visit(Cypress.env('baseURL') + '/vulnerabilities').then(() => {
        cy.get(vulnerabilityListViewSelector.vulnerabilityListViewAddNewButton).should('exist').then(() => {
            cy.get(vulnerabilityListViewSelector.vulnerabilityListViewAddNewButton).click();
        })
        cy.get(vulnerabilityListViewSelector.addNewVulnerabilityBaseScoreMetricsPanel).click();
        if (vulnerability.description) {
            recurse(
                () => cy.get(vulnerabilityListViewSelector.addNewVulnerabilityDescriptionTextArea).type(vulnerability.description),
                ($inputField) => $inputField.val() === vulnerability.description,
                { delay: 1000 }
            )
        }
        switch (vulnerability.cvssVersion) {
            case '2.0':
                cy.get(vulnerabilityListViewSelector.addNewVulnerabilityCvssVersion2Button).click();
                cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.accessVector).click();
                cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.accessComplexity).click();
                cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.authentication).click();
                break;
            default:
                cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.attackVector).click();
                cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.attackComplexity).click();
                cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.privilegesRequired).click();
                cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.userInteraction).click();
                cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.scope).click();
        }
        cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.confidentialityImpact).click();
        cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.integerityImpact).click();
        cy.get(vulnerabilityListViewSelector.metricsScoreRadioInputLabel).contains(vulnerability.availabilityImpact).click();
        cy.get(navBarSelector.confirmDialogueConfirmButton).click();
    })
});

Cypress.Commands.add("deleteVulnerability", (vulnerabilityRow) => {
    cy.get(vulnerabilityListViewSelector.vulnerabilityListViewMoreButton).eq(vulnerabilityRow - 1).click();
    cy.get(vulnerabilityListViewSelector.moreButtonDeleteVulnerabilityButton).click();
    cy.get(vulnerabilityListViewSelector.deletionDialogDeleteButton).click();
});

Cypress.Commands.add("linkWeaknessWithVulnerability", (vulnerabilityRow, weaknessRow) => {//T.B.I.
    cy.get(vulnerabilityListViewSelector.vulnerabilityListViewMoreButton).eq(vulnerabilityRow - 1).click();
    cy.get(vulnerabilityListViewSelector.moreButtonWeaknessLinkingButton).click();
    cy.get(vulnerabilityListViewSelector.weaknessLinkDialogCheckboxInput).eq(weaknessRow - 1).click();
    cy.get(navBarSelector.confirmDialogueConfirmButton).click();
});

Cypress.Commands.add("highlightVulnerability", (vulnerabilityRow) => {
    cy.get(vulnerabilityListViewSelector.vulnerabilityListViewMoreButton).eq(vulnerabilityRow - 1).click();
    cy.get(vulnerabilityListViewSelector.moreButtonHighlightButton).click();
    cy.get(vulnerabilityListViewSelector.vulnerabilityListViewMoreButton).eq(vulnerabilityRow - 1).parent().parent().should('have.css', 'background-color').and('eq', 'rgba(255, 99, 71, 0.2)');//color of parent tr, ie. outer row
});

Cypress.Commands.add("removeVulnerabilityHighlight", (vulnerabilityRow) => {
    cy.get(vulnerabilityListViewSelector.vulnerabilityListViewMoreButton).eq(vulnerabilityRow - 1).click();
    cy.get(vulnerabilityListViewSelector.moreButtonRemoveHighlightButton).click();
    cy.get(vulnerabilityListViewSelector.vulnerabilityListViewMoreButton).eq(vulnerabilityRow - 1).parent().parent().should('have.css', 'background-color').and('eq', 'rgb(248, 248, 248)');//color of parent tr, ie. outer row
});

Cypress.Commands.add("updateVulnerability", (vulnerability) => {
    cy.get(vulnerabilityListViewSelector.vulnerabilityListViewVulnerabilityRow).eq(vulnerability.row - 1).click();
    if (vulnerability.description) {
        cy.get(vulnerabilityListViewSelector.addNewVulnerabilityDescriptionTextArea).clear().type(vulnerability.description);
    }
    cy.get(navBarSelector.confirmDialogueConfirmButton).click();
});